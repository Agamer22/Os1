#  1
# Δημιουργία του αρχείου ask1.txt με την εντολή touch
touch ask1.txt

# Εγγραφή των πληροφοριών με την εντολή echo της οποίας η έξοδος ανακατευθήνεται αντί
# για την οθόνη στο αρχείο ask1.txt
echo "George Pappas george2 12136 Peristeri -------
Nick Nikolaoy nick23 12232 Aigaleo 5314555
George Georgioy george583 11132 Athens -------
Helen Georgioy helen3 12136 Peristeri 5748456
Nick Pappas nick4 11223 Aigaleo 5324123
Helen Ioannoy helen367 13222 Athens -------
Helen Thanoy helen36 11132 Peristeri 9718345
Vasilis Mamalis vas32 12345 Dafni 9738383" > ask1.txt

# Εμφάνηση των πληροφοριών με την εντολή cat και του switch -n για την αρίθμηση
# των γραμμών
cat -n ask1.txt


echo "--------------------------------------------------------------------------------"


# 2
# Η εντολή cal -3 > calfile.txt 


# Η εντολή cal εκτυπώνει το ημερολόγιο το τρέχοντος μήνα
# Το switch -3 εκτυπώνει τον τρέχων, τον προηγούμενο και τον επόμενο μήνα
# Το > calfile.txt ανακατευθήνει την έξοδο της εντολής στο αρχείο calfile.txt
cal -3 > calfile.txt 


echo "--------------------------------------------------------------------------------"


# 3
# Δημιουργία του full.txt
touch full.txt

# Αντιγραφή του ask1.txt στο full.txt
cat ask1.txt > full.txt

# Εγγραφή μιας κενής γραμμής με το switch >> για append 
echo >> full.txt

# Εγγραφή του calfile.txt στο full.txt
cat calfile.txt >> full.txt


echo "--------------------------------------------------------------------------------"


# 4
# Θα γίνει με την εντολή  ls -t | head -n 5
ls -t | head -n 5

# Η εντολή ls εκτυπώνει τα αρχεία του τρεχοντος καταλόγου
# Το switch -t ταξυνομεί τα αρχεία ανάλογα με το ποιό τροποποιήθηκε τελευταίο
# Το | head εκτυπώνει by default τα 10 πρώτα αποτελέσματα της εντολής
# και με το switch -n 5 εκτυπώνει τα 5 πρώτα


echo "--------------------------------------------------------------------------------"


# 5 
# Δημιουργία του καταλόγου mydir1
mkdir mydir1

# Μετάβαση στον mydir1
cd mydir1

# Αντιγραφή του full.txt στο new.txt
cat ../full.txt > new.txt

# Η εντολή cat εκτυπώνει τα περιεγχόμενα του full.txt στο αρχείο new.txt
# (Με την ανακατεύθυνση της εξοδούς του)
# Αφού το αρχείο full.txt βρίσκεται στον γονικό κατάλογο (1 καταλογο πίσω)
# Το path του parent καταλόγου συντάσεται ως ".."

# Επιστροφή στον γονικό κατάλογο
cd ..

# Διαγραφή του καταλόγου mydir1 και των περιεγχομένων του
rm -r mydir1

# Η διαγραφή των περιεγχομένων του καταλόγου γίνεται με το switch -r (recursive)


echo "--------------------------------------------------------------------------------"


# 6
# Η εντολή εμφάνησης
ls -lais /usr

# Το switch -a εκτυπώνει όλα τα αρχεία
# Το -i εκτυπώνει τα inodes των αρχείων
# Το -s εκτυπώνει το μέγεθος των αρχείων σε blocks

# Η εντολή εμφάνησης όλων των περιεγχομένων κάτω απο τον κατάλογο /usr
ls /usr/* |more  &

# Γράφοντας /usr/* το * σημαίνει πως η ls θα πάρει όλα τα αρχεία κατω απο το /usr
# Το |more εμφανίζει τα αποτελέσματα σελίδα-σελίδα 

# Επειδή η more 'κολλάει' το script
sleep 2
kill %1

# Το sleep 2 αφήνει να περάσουν 2 δευτερόλεπτα ώστε να προλάβει να εκτελεστεί
# η 2η more
# Και η kill %1 τερματίζει την 1η διεργασία που τρέχει στο background (&)


echo "--------------------------------------------------------------------------------"


# 7
# Δημιουργία του καταλόγου
mkdir testdir1

# Μετάβαση στον testdir1
cd testdir1

# Δημιουργία hardlink 
ln ../ask1.txt ask1link

# Έλεγχος του hardlink
ls -i
ls -i ../ask1.txt

# Αφού και τα δύο αρχεία έχουν τα ίδια inodes 
# το hard link έχει δημιουργηθεί σωστά 

#Επιστροφή στον προηγούμενο κατάλογο
cd ..


echo "--------------------------------------------------------------------------------"


# 8
# Δημιουργία καταλόγων και αρχείων
mkdir kat1
cd kat1
touch file1
touch file2
echo one > file1
echo two > file2

# Η εντολή cp * κάνει copy όλα τα αρχεία του kat1
cp *

# Η εντολή mv κάνει move το file1 στον ίδιο κατάλογο και το κάνει rename σε file2
mv *
# Άρα το file1 δεν υπάρχει γιατί μετονομάστικε σε file2
# Και το original file2 έγινε overwritten

#Επιστροφή στον προηγούμενο κατάλογο
cd ..


echo "--------------------------------------------------------------------------------"


# 9
# Εκτύπωση των γραμμών που τελειώνουν με ψηφεία
cat ask1.txt | grep '[0-9]$'

# Η εντολή grep φιλτράρει τα αποτελέσματα της εντολής cat
# Το φίλτρο είναι όταν οι γραμμές τελειώνουν ($) με έναν αριθμό (0-9)


echo "--------------------------------------------------------------------------------"


# 10
# Εκτύπωση των γραμμών που περιέχουν 'Pap' αλλά δεν περιέχουν 'Aig'
grep 'Pap' ask1.txt | grep -v 'Aig'

# Η πρώτη εντολή grep φιλτράρει τις γραμμές που περιέχουν 'Pap' και τις στέλνει
# Σε μια δεύτερη grep και φιλτράρει τις είδη φιλτραρισμένες ψάχνοντας αυτές που 
# δεν περιέχουν 'Aig'


echo "--------------------------------------------------------------------------------"


# 11
# Εκτύπωση των γραμμών που δεν ξεκινούν απο G ή N και περιέχουν Geo και Per
# με αυτήν την σειρά
grep -v '^G' ask1.txt | grep -v '^N' | grep 'Geo.*Per'

# Το πρώτο και 2ο Grep φιλτράρει τις γραμμές που δεν ξεκινούν με G ή N 
# Το τρίτο grep φιλτράρει τις γραμμές που περιέχουν Geo 
# και μετά απο έναν οποιοδήποτε αριθμό χαρακτήρων (.*) περιέχουν Per


echo "--------------------------------------------------------------------------------"


# 12
# Εκτύπωση χρηστών με username που δεν αρχίζει από ls1
users | grep -v '^ls1'

# Το ^ σημαίνει πως το grep ελέγχει την αρχή της γραμμής


echo "--------------------------------------------------------------------------------"


# 13 
# Εμφάνηση όλων των διεργασιών
ps -e

# Το switch -e σημαίνει everyhting


echo "--------------------------------------------------------------------------------"


# 14
# Εμφάνηση του αριθμού των διεργασιών που το ονομα τους τελειώνει με sh
ps -eo comm | grep 'sh$' | wc -l

# Το switch -eo σημαίνει πως θα εκτυπωθούν όλα τα processes (-e) 
# με μόνη λεπτομέρια (-o) το όνομα τους (comm) 
# Επίσης το word counter (wc) με το switch -l (lines) μετράει τα αποτελέσματα


echo "--------------------------------------------------------------------------------"


# 15
# Εκτύπωση των διεργασιών από τον λογαριασμό του χρήστη (andrew)
ps -eo user | grep 'andrew'


echo "--------------------------------------------------------------------------------"


# 16
# Εκτύπωση του αριθμού των αρχείων που έχουν τα συγκεκριμένα permissions 
ls -l | grep '^.r..r..r' | grep '^..w' | grep -v '...x..x..x' | wc -l

# Η ls -l εμφανίζει όλα τα αρχεία και τα permissions τους
# Το αποτέλεσμα της ls πάει σε τρεία grep τα οποία φιλτράρουν τις 3 συνθήκες
# Το ^ σημαίνει πως η grep ξεκινά από την αρχή της γραμμής
# Και η τελείες σημαίνουν πως δεν αφορά την grep τι χαρακτήρας είναι αυτός


echo "--------------------------------------------------------------------------------"


# 17
# Εκτύπωση των αρχείων του καταλόγου /proc με όνομα μόνο αριθμούς
ls /proc | grep '[0-9]' | grep -v '[ -/]' | grep -v '[:-~]'

# Η πρώτη grep φιλτράρει τα αρχεία που περιέχου αριθμούς 
# Και η δεύτερη και τρίτη grep απορρίπτουν τα αρχεία που περιέχουν χαρακτήρες 
# ειδικούς ή μη


echo "--------------------------------------------------------------------------------"


# 18
# Μετάβαση στον κατάλογο dev
cd /dev

# Εκτύπωση των πληροφοριών των αρχείων που ξεκινούν απο tty
ls -l $(ls | grep 'tty')

# Η εσωτερική ls δίνει τα ονόματα των αρχείων του καταλόγου στην grep
# η οποία φιλτράρει τα αρχεία που ξεκινούν απο tty
# H εξοτερική ls παίρνει ως arguement τα αποτελέσματα της εσοτερικής και 
# εκτυπώνει τις πληροφορίες τους

# Επαναφορά στον προηγούμενο κατάλογο
cd -


echo "--------------------------------------------------------------------------------"


# 19
# Ταξινόμηση των περιεγχομένων του αρχείου ask1.txt σε φθίνουσα σειρα ως προς  
# το username
cat ask1.txt |awk '{print $1,$2}' | sort

# Η cat διαβάζει τα περιεγχόμενα του αρχείου
# Η awk εκτυπώνει μόνο τις πρώτες δύο λέξεις (username)
# Η sort ταξινομεί τα username αλφαβητικά


echo "--------------------------------------------------------------------------------"


# 20
# Ταξινόμιση των .c αρχείων του καταλόγου ως προς το μέγεθος
ls -S $(ls | grep '.c$')

# Η εσωτερική ls εκτυπώνει τα ονόματα των αρχείων
# Η grep φιλτράρει τα .c αρχεία
# Η εξοτερική ls παίρνει το αποτέλεσμα της grep και το ταξινομεί
# ως προς το μέγεθος


echo "--------------------------------------------------------------------------------"


# 21
# Ταξινόμηση των αρχείων του λογαριασμού με permissions 755 ως προς το μέγεθος
ls -Rl  /home/andrew | grep '.rwxr-xr-x'| awk '{print $9,$5}' | sort -n -k 2 | \
awk '{print $1}'

# Το ls εκτυπώνει όλα τα αρχεία του καταλόγου andrew (κατάλογος του λογαριασμού)
# (και των υπογαταλόγων -R (recursive)) σε long (-l) format
# 
# Η grep φιλτράρει τα αρχεία με τα συγκεκριμένα permissions
# 
# Η awk εκτυπώνει μόνο την 9η και 5η λέξη κάθε γραμμής
#
# Η sort ταξινομεί αριθμιτικά (-n) την δεύτερη λέξη κάθε γραμμής (-k 2)
#
# Η εντολή συνεχίζεται στην κάτων γραμμή (\)
#
# Η awk εκτυπώνει μόνο την 1η λέξη κάθε γραμμής 
# (για να φαίνεται μόνο το όνομα και όχι τα sizes)


echo "--------------------------------------------------------------------------------"


# 22
# Ταξινόμηση των αρχείων του καταλόγου .dev κατα owner και group
ls -l /dev | awk '{print $3,$4,$10}' | sort | awk '{print $3}' > binfiles.txt

# Η ls εκτυπώνει πληροφορίες για όλα τα αρχεία του dev
# Η awk κρατά μόνο τον owner και το group 
# Η sort τα ταξινομεί
# Η δεύτερη awk κρατά μόνο τα ονόματα από τα ταξινομιμένα αρχεία
# Το αποτέλεσμα ανακατευθήνεται στο αρχείο binfiles.txt


echo "--------------------------------------------------------------------------------"


# 23
# Δημιουργία αρχείου που περιέχει πληροφορίες για τους συνδεδεμένους χρήστες
# που ξεκινούν από ls1 ταξινομιμένες ως πρός την ημερομηνία και ώρα σύνδεσης 
who | grep '^ls1' | awk '{print $3,$4,$1}' | sort -n| awk '{print $3}' | \
 [ $# -gt 0 ] && id "$1" > userinfo.txt  

# Η εντολή who εκτυπώνει το ποιοί χρήστες είναι συνδεδεμένει
# Η εντολή grep φιλτράρει τους χρήστες που ξεκινούν απο ls1
# Η εντολή awk κρατά μόνο τις 3η 4η και 1η γραμμή
# δηλαδή την ημερομηνία και ώρα σύνδεσης και τα ονόματα των χρηστών
# Η sort τα ταξινομεί αριθμητικά τα αποτελέσματα
# Η awk κρατά μόνο τα ονόματα των χρηστών
# Η επόμενη εντολή ελέγχει το πλήθος των arguements που πρόκυται να πάνε στην id
# ($#) και αν είναι πάνω απο μηδέν (-gt 0) τότε εκτελείται η εντολή id με το
# πρώτο arguement
# (Αυτή η συνθήκη χρειάστηκε επειδή η id χωρίς κανένα όρισμα εκτυπώνει πληροφορίες
# για τον τρέχων χρήστη)
# Τέλος η έξοδος ανακατευθήνεται στο αρχείο userinfo.txt


echo "--------------------------------------------------------------------------------"


# 24
# Αλλαγή όλων των instances του ονόματος nick σε nickolaos στο ask1.txt
sed -i 's/Nick/Nickolaos/g' ask1.txt

# Η εντολή sed αντικαθιστεί λέξεις σε ένα αρχείο
# Το switch -i (implace) σημαίνει πως δεν θα δημιουργηθεί καινούργιο αρχείο
# Το 's' σημαίνει πως η λέξη μετά το / θα γίνει substitute με την λέξη
# μετά το δεύτερο / 
# Και τέλος το /g σημαίνει global
# Δηλαδή να μην αντικατασταθεί μόνο η πρώτη εμφάνηση της λέξης αλλά όλες 


echo "--------------------------------------------------------------------------------"


# 25
# -rwxr-x--x 
# Αυτό το αρχείο είναι κανονικό (-)
# Ο user έχει δικαίωμα read write execute
# Το group έχει δικαίωμα read execute
# Όλοι οι άλλοι έχουν δικαίωμα execute
# 
# drwxr-xr--
# Αυτό το αρχείο είναι ένα directory (d)
# Ο user έχει δικαίωμα read write execute
# Το group έχει δικαίωμα read execute
# Όλοι οι άλλοι έχουν δικαίωμα read
#
# drwx--x--x
# Αυτό το αρχείο είναι ένα directory (d)
# Ο user έχει δικαίωμα read write execute
# Το group έχει δικαίωμα  execute
# Όλοι οι άλλοι έχουν δικαίωμα execute


echo "--------------------------------------------------------------------------------"


# 26
# Αλλαγή permissions στο directory testdir1
chmod 744 testdir1/*

# Το /* σημαίνει σε όλα τα αρχεία του testdir1


echo "--------------------------------------------------------------------------------"


# 27
# 
sudo useradd -m myfriend
# Δημιουργία νέου χρήστη με home directory (-m)

sudo chown myfriend ask1.txt
# Αλλαγή ιδιοκτήτη του αρχείου ask1.txt

sudo mv ask1.txt /home/myfriend/
# Μετακίνηση του αρχείου ask1.txt

#sudo userdel myfriend
# Διαγραφή του user


echo "--------------------------------------------------------------------------------"


# 28
# Δημιουργία αρχείων
touch f1 && chmod 757 f1
touch f2 && chmod 313 f1
touch f3 && chmod 010 f1
touch f4 && chmod 642 f1
touch f5 && chmod 551 f1
touch f6 && chmod 133 f1
touch f7 && chmod 111 f1


# Έλεγχος δικαιωμάτων με το \1 και τις παρενθέσεις για σύγκριση

#a
ls -l | egrep '....r-x' | awk '{print $9}'

#b
ls -l | egrep '^.(...)...\1'

#c
ls -l | egrep '^.(.)..(.)..(.)\1'

#d
ls -l | egrep '^.(.)..(.)..(.)..\1 ' | egrep ' ^...(.)..(.)..(.)\1'

#e
ls -l | egrep '^....(.)..(.)..\1 '| egrep '^......(.)..(.)\1'